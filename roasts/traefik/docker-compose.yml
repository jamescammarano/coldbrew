---
secrets:
  CLOUDFLARE_ZONE_API_TOKEN:
    file: "secrets/CLOUDFLARE_ZONE_API_TOKEN"
  CLOUDFLARE_DNS_API_TOKEN:
    file: "secrets/CLOUDFLARE_DNS_API_TOKEN" # Global API Key not Origin CA Key

services:
  reverse-proxy:
    image: traefik:{{ Tag }}
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    environment:
      - TZ=America/New_York
      - CLOUDFLARE_DNS_API_TOKEN=/run/secrets/CLOUDFLARE_DNS_API_TOKEN
      - CLOUDFLARE_ZONE_API_TOKEN=/run/secrets/CLOUDFLARE_ZONE_API_TOKEN
    secrets:
      - CLOUDFLARE_ZONE_API_TOKEN
      - CLOUDFLARE_DNS_API_TOKEN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ InstallDir }}/traefik/letsencrypt:/letsencrypt"
      - "{{ InstallDir }}/traefik/traefik.yml:/etc/traefik/traefik.yml"

    labels:
      # Crucial! This tells Traefik to actually pay attention to this container
      - "traefik.enable=true"

      - "traefik.http.routers.traefik-dashboard.entrypoints=https"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=main"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.{{ Domain }}`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"

    networks:
      - traefik_public
    restart: "{{ Restart }}"

networks:
  traefik_public:
    external: true
